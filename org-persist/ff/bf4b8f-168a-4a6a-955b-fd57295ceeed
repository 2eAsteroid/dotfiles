(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[[[nil nil #98=(headline (:raw-value #1="Motivations" :begin 108 :end 1211 :pre-blank 0 :contents-begin 122 :contents-end 1209 :robust-begin 124 :robust-end 1207 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 108 :title #1# :mode nil :granularity element :cached t :parent #3=(org-data (:begin 1 :contents-begin 1 :contents-end 48523 :end 48523 :robust-begin 3 :robust-end 48521 :post-blank 0 :post-affiliated 1 :path "c:/Users/linyi/AppData/Roaming/.emacs.d/config.org" :mode org-data :CATEGORY "config" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #6=(headline (:raw-value #2="Bootstrap" :begin 1592 :end 11186 :pre-blank 0 :contents-begin 1604 :contents-end 11184 :robust-begin 1606 :robust-end 11182 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1592 :title #2# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #99=(headline (:raw-value #4="Constant Data" :begin 1211 :end 1592 :pre-blank 0 :contents-begin 1227 :contents-end 1590 :robust-begin 1229 :robust-end 1588 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1211 :title #4# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[nil nil #103=(headline (:raw-value #5="\"More Sane\" Defaults" :begin 2467 :end 7625 :pre-blank 0 :contents-begin 2491 :contents-end 7624 :robust-begin 2493 :robust-end 7622 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2467 :title #5# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] [nil nil #107=(headline (:raw-value #7="Focusing out of a Buffer will Garbage Collect" :begin 7797 :end 7961 :pre-blank 0 :contents-begin 7846 :contents-end 7960 :robust-begin 7848 :robust-end 7958 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7797 :title #7# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] #105=(headline (:raw-value #8="Fullscreen?! Yippee" :begin 7625 :end 7797 :pre-blank 0 :contents-begin 7648 :contents-end 7796 :robust-begin 7650 :robust-end 7794 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7625 :title #8# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] #101=(headline (:raw-value #9="\"Sane\" Defaults" :begin 1604 :end 2467 :pre-blank 0 :contents-begin 1623 :contents-end 2466 :robust-begin 1625 :robust-end 2464 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1604 :title #9# :mode section :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] [[[nil nil #110=(headline (:raw-value #10="Default to UTF-8 Encoding" :begin 8135 :end 8469 :pre-blank 0 :contents-begin 8164 :contents-end 8468 :robust-begin 8166 :robust-end 8466 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8135 :title #10# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] [nil nil #115=(headline (:raw-value #11="The Garbage Collector Magic Hack 🎩 🪄" :begin 9523 :end 10142 :pre-blank 0 :contents-begin 9563 :contents-end 10141 :robust-begin 9565 :robust-end 10139 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9523 :title #11# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] #111=(headline (:raw-value #12="Stops Littering" :begin 8469 :end 9523 :pre-blank 0 :contents-begin 8488 :contents-end 9522 :robust-begin 8490 :robust-end 9520 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8469 :title #12# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] [[nil nil #119=(headline (:raw-value #13="Highlight Line" :begin 10960 :end 11186 :pre-blank 0 :contents-begin 10978 :contents-end 11184 :robust-begin 10980 :robust-end 11182 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10960 :title #13# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] [nil nil #121=(headline (:raw-value #14="Set Fallback Fonts" :begin 11194 :end 13662 :pre-blank 0 :contents-begin 11216 :contents-end 13661 :robust-begin 11218 :robust-end 13659 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11194 :title #14# :mode section :granularity element :cached t :parent #16=(headline (:raw-value #15="Fonts" :begin 11186 :end 14167 :pre-blank 0 :contents-begin 11194 :contents-end 14165 :robust-begin 11196 :robust-end 14163 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 11186 :title #15# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #16# 0] #117=(headline (:raw-value #17="General Utils" :begin 10142 :end 10960 :pre-blank 0 :contents-begin 10159 :contents-end 10959 :robust-begin 10161 :robust-end 10957 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 10142 :title #17# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] #108=(headline (:raw-value #18="Save Removes Trailing Whitespace" :begin 7961 :end 8135 :pre-blank 0 :contents-begin 7997 :contents-end 8134 :robust-begin 7999 :robust-end 8132 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7961 :title #18# :mode nil :granularity element :cached t :parent #6# :org-element--cache-sync-key nil)) 0] [[[[nil nil #22=(headline (:raw-value #19="Themes" :begin 14167 :end 14364 :pre-blank 0 :contents-begin 14176 :contents-end 14361 :robust-begin 14178 :robust-end 14359 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14167 :title #19# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #24=(headline (:raw-value #20="Appearances" :begin 14364 :end 15110 :pre-blank 0 :contents-begin 14378 :contents-end 15108 :robust-begin 14380 :robust-end 15106 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14364 :title #20# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #125=(headline (:raw-value #21="Crypt Theme" :begin 14230 :end 14364 :pre-blank 0 :contents-begin 14245 :contents-end 14361 :robust-begin 14247 :robust-end 14359 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14230 :title #21# :mode nil :granularity element :cached t :parent #22# :org-element--cache-sync-key nil)) 0] [[nil nil #128=(headline (:raw-value #23="Rainbow Mode" :begin 14486 :end 14830 :pre-blank 0 :contents-begin 14502 :contents-end 14829 :robust-begin 14504 :robust-end 14827 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14486 :title #23# :mode nil :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] [nil nil #132=(headline (:raw-value #25="Dashboard" :begin 15110 :end 15863 :pre-blank 0 :contents-begin 15122 :contents-end 15860 :robust-begin 15124 :robust-end 15858 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15110 :title #25# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #130=(headline (:raw-value #26="Highlight Delimiters" :begin 14830 :end 15110 :pre-blank 0 :contents-begin 14854 :contents-end 15108 :robust-begin 14856 :robust-end 15106 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14830 :title #26# :mode nil :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] #127=(headline (:raw-value #27="All The Icons" :begin 14378 :end 14486 :pre-blank 0 :contents-begin 14395 :contents-end 14485 :robust-begin 14397 :robust-end 14483 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 14378 :title #27# :mode section :granularity element :cached t :parent #24# :org-element--cache-sync-key nil)) 0] [[[nil nil #134=(headline (:raw-value #28="Truncate String Utils" :begin 15874 :end 16870 :pre-blank 0 :contents-begin 15899 :contents-end 16869 :robust-begin 15901 :robust-end 16867 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15874 :title #28# :mode section :granularity element :cached t :parent #31=(headline (:raw-value #29="Modeline" :begin 15863 :end 24725 :pre-blank 0 :contents-begin 15874 :contents-end 24723 :robust-begin 15876 :robust-end 24721 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 15863 :title #29# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #137=(headline (:raw-value #30="Modeline Save/d Icon" :begin 17605 :end 19402 :pre-blank 0 :contents-begin 17629 :contents-end 19401 :robust-begin 17631 :robust-end 19399 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17605 :title #30# :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] #136=(headline (:raw-value #32="Modeline Blank Spaces Helper Functions" :begin 16870 :end 17605 :pre-blank 0 :contents-begin 16912 :contents-end 17604 :robust-begin 16914 :robust-end 17602 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 16870 :title #32# :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] [[nil nil #140=(headline (:raw-value #33="Modeline Buffer Name, Mode, and VC Branch" :begin 21165 :end 23219 :pre-blank 0 :contents-begin 21210 :contents-end 23219 :robust-begin 21212 :robust-end 23217 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 21165 :title #33# :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] [nil nil #144=(headline (:raw-value #34="Modeline Format" :begin 24064 :end 24725 :pre-blank 0 :contents-begin 24083 :contents-end 24723 :robust-begin 24085 :robust-end 24721 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 24064 :title #34# :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] #143=(headline (:raw-value #35="Modeline DateTime" :begin 23219 :end 24064 :pre-blank 0 :contents-begin 23240 :contents-end 24063 :robust-begin 23242 :robust-end 24061 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23219 :title #35# :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] #139=(headline (:raw-value #36="Modeline Buffer/Region Information" :begin 19402 :end 21165 :pre-blank 0 :contents-begin 19440 :contents-end 21164 :robust-begin 19442 :robust-end 21162 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 19402 :title #36# :mode nil :granularity element :cached t :parent #31# :org-element--cache-sync-key nil)) 0] #31# 0] #123=(headline (:raw-value #37="Ligatures" :begin 13662 :end 14167 :pre-blank 0 :contents-begin 13675 :contents-end 14165 :robust-begin 13677 :robust-end 14163 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 13662 :title #37# :mode nil :granularity element :cached t :parent #16# :org-element--cache-sync-key nil)) 0] [[[[[nil nil #148=(headline (:raw-value #38="Setup" :begin 24920 :end 25023 :pre-blank 0 :contents-begin 24929 :contents-end 25022 :robust-begin 24931 :robust-end 25020 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 24920 :title #38# :mode nil :granularity element :cached t :parent #42=(headline (:raw-value #39="Keyboard Layout" :begin 24725 :end 28253 :pre-blank 0 :contents-begin 24743 :contents-end 28251 :robust-begin 24745 :robust-end 28249 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 24725 :title #39# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #152=(headline (:raw-value #40="What I Would Like to See" :begin 25042 :end 26292 :pre-blank 0 :contents-begin 25071 :contents-end 26292 :robust-begin 25073 :robust-end 26290 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 25042 :title #40# :mode section :granularity element :cached t :parent #43=(headline (:raw-value #41="Key Definitions" :begin 25023 :end 27333 :pre-blank 0 :contents-begin 25042 :contents-end 27332 :robust-begin 25044 :robust-end 27330 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 25023 :title #41# :mode nil :granularity element :cached t :parent #42# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #43# 0] [[nil nil #153=(headline (:raw-value #44="Meow Thing Remapping" :begin 27333 :end 28253 :pre-blank 0 :contents-begin 27357 :contents-end 28251 :robust-begin 27359 :robust-end 28249 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 27333 :title #44# :mode nil :granularity element :cached t :parent #42# :org-element--cache-sync-key nil)) 0] [nil nil #154=(headline (:raw-value #45="DocView" :begin 28365 :end 28499 :pre-blank 0 :contents-begin 28376 :contents-end 28498 :robust-begin 28378 :robust-end 28496 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 28365 :title #45# :mode nil :granularity element :cached t :parent #47=(headline (:raw-value #46="PDF Viewing" :begin 28253 :end 28606 :pre-blank 0 :contents-begin 28267 :contents-end 28604 :robust-begin 28269 :robust-end 28602 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 28253 :title #46# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #47# 0] #150=(headline (:raw-value #48="Meow Substitute for Event Horizon" :begin 26398 :end 27333 :pre-blank 0 :contents-begin 26436 :contents-end 27332 :robust-begin 26438 :robust-end 27330 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 26398 :title #48# :mode nil :granularity element :cached t :parent #43# :org-element--cache-sync-key nil)) 0] [[[nil nil #157=(headline (:raw-value #49="Youtube-DL function" :begin 28606 :end 29074 :pre-blank 0 :contents-begin 28628 :contents-end 29072 :robust-begin 28630 :robust-end 29070 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 28606 :title #49# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #160=(headline (:raw-value #50="Built-In" :begin 29139 :end 29649 :pre-blank 0 :contents-begin 29151 :contents-end 29648 :robust-begin 29153 :robust-end 29646 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 29139 :title #50# :mode nil :granularity element :cached t :parent #52=(headline (:raw-value #51="Org Mode" :begin 29074 :end 34569 :pre-blank 0 :contents-begin 29085 :contents-end 34567 :robust-begin 29087 :robust-end 34565 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 29074 :title #51# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #52# 0] [[nil nil #164=(headline (:raw-value #53="Org Bullets" :begin 29929 :end 30159 :pre-blank 0 :contents-begin 29944 :contents-end 30158 :robust-begin 29946 :robust-end 30156 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 29929 :title #53# :mode nil :granularity element :cached t :parent #52# :org-element--cache-sync-key nil)) 0] [nil nil #168=(headline (:raw-value #54="Org Agenda and Task List Creation" :begin 31200 :end 33844 :pre-blank 0 :contents-begin 31237 :contents-end 33843 :robust-begin 31239 :robust-end 33841 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 31200 :title #54# :mode nil :granularity element :cached t :parent #52# :org-element--cache-sync-key nil)) 0] #165=(headline (:raw-value #55="Org TODO" :begin 30159 :end 31200 :pre-blank 0 :contents-begin 30171 :contents-end 31199 :robust-begin 30173 :robust-end 31197 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 30159 :title #55# :mode nil :granularity element :cached t :parent #52# :org-element--cache-sync-key nil)) 0] #161=(headline (:raw-value #56="Org Edit Latex" :begin 29649 :end 29929 :pre-blank 0 :contents-begin 29667 :contents-end 29928 :robust-begin 29669 :robust-end 29926 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 29649 :title #56# :mode nil :granularity element :cached t :parent #52# :org-element--cache-sync-key nil)) 0] #156=(headline (:raw-value #57="PDF-tools" :begin 28499 :end 28606 :pre-blank 0 :contents-begin 28512 :contents-end 28604 :robust-begin 28514 :robust-end 28602 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 28499 :title #57# :mode nil :granularity element :cached t :parent #47# :org-element--cache-sync-key nil)) 0] [[[[[nil nil #170=(headline (:raw-value #58="Citation Exports" :begin 33951 :end 34485 :pre-blank 0 :contents-begin 33972 :contents-end 34484 :robust-begin 33974 :robust-end 34482 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 33951 :title #58# :mode nil :granularity element :cached t :parent #62=(headline (:raw-value #59="Citation management" :begin 33844 :end 34569 :pre-blank 0 :contents-begin 33867 :contents-end 34567 :robust-begin 33869 :robust-end 34565 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 33844 :title #59# :mode nil :granularity element :cached t :parent #52# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #68=(headline (:raw-value #60="Vertico" :begin 34569 :end 35193 :pre-blank 0 :contents-begin 34579 :contents-end 35191 :robust-begin 34581 :robust-end 35189 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 34569 :title #60# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #172=(headline (:raw-value #61="Zotra" :begin 34485 :end 34569 :pre-blank 0 :contents-begin 34495 :contents-end 34567 :robust-begin 34497 :robust-end 34565 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 34485 :title #61# :mode nil :granularity element :cached t :parent #62# :org-element--cache-sync-key nil)) 0] [[nil nil #65=(headline (:raw-value #63="Misc." :begin 35193 :end 39296 :pre-blank 0 :contents-begin 35201 :contents-end 39294 :robust-begin 35203 :robust-end 39292 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 35193 :title #63# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #178=(headline (:raw-value #64="Spacious Padding" :begin 35500 :end 35748 :pre-blank 0 :contents-begin 35520 :contents-end 35747 :robust-begin 35522 :robust-end 35745 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 35500 :title #64# :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] #176=(headline (:raw-value #66="Persistent Scratch" :begin 35254 :end 35500 :pre-blank 0 :contents-begin 35276 :contents-end 35499 :robust-begin 35278 :robust-end 35497 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 35254 :title #66# :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] #174=(headline (:raw-value #67="Setup" :begin 34819 :end 35193 :pre-blank 0 :contents-begin 34828 :contents-end 35191 :robust-begin 34830 :robust-end 35189 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 34819 :title #67# :mode nil :granularity element :cached t :parent #68# :org-element--cache-sync-key nil)) 0] [[[nil nil #182=(headline (:raw-value #69="Indent-Guides" :begin 35975 :end 36566 :pre-blank 0 :contents-begin 35992 :contents-end 36565 :robust-begin 35994 :robust-end 36563 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 35975 :title #69# :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] [nil nil #185=(headline (:raw-value #70="Transparency" :begin 37075 :end 37781 :pre-blank 0 :contents-begin 37091 :contents-end 37780 :robust-begin 37093 :robust-end 37778 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 37075 :title #70# :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] #183=(headline (:raw-value #71="Olivetti" :begin 36566 :end 37075 :pre-blank 0 :contents-begin 36578 :contents-end 37074 :robust-begin 36580 :robust-end 37072 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 36566 :title #71# :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] [[nil nil #189=(headline (:raw-value #72="Random stuff" :begin 38258 :end 39296 :pre-blank 0 :contents-begin 38274 :contents-end 39294 :robust-begin 38276 :robust-end 39292 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 38258 :title #72# :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] [nil nil #192=(headline (:raw-value #73="Specific Windows mpv Hack" :begin 39431 :end 39812 :pre-blank 0 :contents-begin 39460 :contents-end 39811 :robust-begin 39462 :robust-end 39809 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 39431 :title #73# :mode nil :granularity element :cached t :parent #75=(headline (:raw-value #74="EMMS (Emacs MultiMedia System)" :begin 39296 :end 40008 :pre-blank 0 :contents-begin 39329 :contents-end 40006 :robust-begin 39331 :robust-end 40004 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 39296 :title #74# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #75# 0] #186=(headline (:raw-value #76="Marginalia" :begin 37781 :end 38258 :pre-blank 0 :contents-begin 37795 :contents-end 38257 :robust-begin 37797 :robust-end 38255 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 37781 :title #76# :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] #180=(headline (:raw-value #77="Keyfreq" :begin 35748 :end 35975 :pre-blank 0 :contents-begin 35759 :contents-end 35974 :robust-begin 35761 :robust-end 35972 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 35748 :title #77# :mode nil :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] [[[[nil nil #195=(headline (:raw-value #78="Electric Pair Mode" :begin 40008 :end 41297 :pre-blank 0 :contents-begin 40029 :contents-end 41295 :robust-begin 40031 :robust-end 41293 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 40008 :title #78# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #197=(headline (:raw-value #79="Default Keys Change" :begin 41303 :end 41486 :pre-blank 0 :contents-begin 41326 :contents-end 41484 :robust-begin 41328 :robust-end 41482 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 41303 :title #79# :mode section :granularity element :cached t :parent #81=(headline (:raw-value #80="Avy" :begin 41297 :end 41486 :pre-blank 0 :contents-begin 41303 :contents-end 41484 :robust-begin 41305 :robust-end 41482 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 41297 :title #80# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #81# 0] [[nil nil #200=(headline (:raw-value #82="Orderless" :begin 42256 :end 42598 :pre-blank 0 :contents-begin 42268 :contents-end 42595 :robust-begin 42270 :robust-end 42593 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 42256 :title #82# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #87=(headline (:raw-value #83="Progressive Overload Pomodoro (Progodoro)" :begin 42870 :end 47429 :pre-blank 0 :contents-begin 42914 :contents-end 47427 :robust-begin 42916 :robust-end 47425 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 42870 :title #83# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #202=(headline (:raw-value #84="Alert Toast" :begin 42598 :end 42870 :pre-blank 0 :contents-begin 42612 :contents-end 42867 :robust-begin 42614 :robust-end 42865 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 42598 :title #84# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #198=(headline (:raw-value #85="Hydra" :begin 41486 :end 42256 :pre-blank 0 :contents-begin 41494 :contents-end 42253 :robust-begin 41496 :robust-end 42251 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 41486 :title #85# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[[nil nil #206=(headline (:raw-value #86="Function" :begin 44111 :end 47429 :pre-blank 0 :contents-begin 44123 :contents-end 47427 :robust-begin 44125 :robust-end 47425 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 44111 :title #86# :mode nil :granularity element :cached t :parent #87# :org-element--cache-sync-key nil)) 0] [nil nil #95=(headline (:raw-value #88="Flycheck" :begin 47596 :end 47994 :pre-blank 0 :contents-begin 47607 :contents-end 47991 :robust-begin 47609 :robust-end 47989 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 47596 :title #88# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #208=(headline (:raw-value #89="Yasnippet" :begin 47429 :end 47596 :pre-blank 0 :contents-begin 47441 :contents-end 47593 :robust-begin 47443 :robust-end 47591 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 47429 :title #89# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[nil nil #93=(headline (:raw-value #90="Languages" :begin 47994 :end 48182 :pre-blank 0 :contents-begin 48006 :contents-end 48179 :robust-begin 48008 :robust-end 48177 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 47994 :title #90# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #213=(headline (:raw-value #91="Org Roam" :begin 48182 :end 48523 :pre-blank 0 :contents-begin 48193 :contents-end 48523 :robust-begin 48195 :robust-end 48521 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 48182 :title #91# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #212=(headline (:raw-value #92="Rust" :begin 48006 :end 48182 :pre-blank 0 :contents-begin 48014 :contents-end 48179 :robust-begin 48016 :robust-end 48177 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 48006 :title #92# :mode section :granularity element :cached t :parent #93# :org-element--cache-sync-key nil)) 0] #210=(headline (:raw-value #94="Setup" :begin 47638 :end 47994 :pre-blank 0 :contents-begin 47647 :contents-end 47991 :robust-begin 47649 :robust-end 47989 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 3 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 47638 :title #94# :mode nil :granularity element :cached t :parent #95# :org-element--cache-sync-key nil)) 0] #205=(headline (:raw-value #96="Variables" :begin 43139 :end 44111 :pre-blank 0 :contents-begin 43152 :contents-end 44110 :robust-begin 43154 :robust-end 44108 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 43139 :title #96# :mode nil :granularity element :cached t :parent #87# :org-element--cache-sync-key nil)) 0] #194=(headline (:raw-value #97="Setup" :begin 39812 :end 40008 :pre-blank 0 :contents-begin 39821 :contents-end 40006 :robust-begin 39823 :robust-end 40004 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 39812 :title #97# :mode nil :granularity element :cached t :parent #75# :org-element--cache-sync-key nil)) 0] #62# 1] #42# 1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[[[[nil nil #3# 0] [nil nil #98# 0] (section (:begin 1 :end 108 :contents-begin 1 :contents-end 107 :robust-begin 1 :robust-end 105 :post-blank 1 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[nil nil #100=(section (:begin 1227 :end 1592 :contents-begin 1227 :contents-end 1590 :robust-begin 1227 :robust-end 1588 :post-blank 2 :post-affiliated 1227 :mode section :granularity element :cached t :parent #99# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1294 :end 1566 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defconst *2e/full-name* \"Daniel Lin\"\12    \"Stores your full name.\")\12  (defconst *2e/display-name* \"Daniel L.\"\12    \"Stores your display name.\")\12  (defconst *2e/email* \"two-e-asteroid@outlook.com\"\12    \"Stores your main email address.\")\12\12" :post-blank 1 :post-affiliated 1294 :mode nil :granularity element :cached t :parent #100# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 1227 :end 1294 :contents-begin 1227 :contents-end 1294 :post-blank 0 :post-affiliated 1227 :mode planning :granularity element :cached t :parent #100# :org-element--cache-sync-key nil)) 0] #99# 0] [[[nil nil #101# 0] [nil nil (paragraph (:begin 1623 :end 1701 :contents-begin 1623 :contents-end 1701 :post-blank 0 :post-affiliated 1623 :mode planning :granularity element :cached t :parent #102=(section (:begin 1623 :end 2467 :contents-begin 1623 :contents-end 2466 :robust-begin 1623 :robust-end 2464 :post-blank 1 :post-affiliated 1623 :mode section :granularity element :cached t :parent #101# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #102# 0] [[nil nil #103# 0] [nil nil (paragraph (:begin 2491 :end 2564 :contents-begin 2491 :contents-end 2564 :post-blank 0 :post-affiliated 2491 :mode planning :granularity element :cached t :parent #104=(section (:begin 2491 :end 7625 :contents-begin 2491 :contents-end 7624 :robust-begin 2491 :robust-end 7622 :post-blank 1 :post-affiliated 2491 :mode section :granularity element :cached t :parent #103# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #104# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1701 :end 2455 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (when (display-graphic-p)        ; When Emacs is running as a GUI (gooey???) application\12    (blink-cursor-mode 0)          ; Stops the cursor from blinking; it's actually kind of annoying now that I think about it\12    (scroll-bar-mode 0)            ; Removes the scroll bar at the right -- you don't /really/ need this\12    (tool-bar-mode 0)              ; Removes the buttons, \"fit a square into a circular hole\" tool bar (Or is this the textual one?)\12    (tooltip-mode 0))              ; Removes tool tips from appearing in popup windows\12  (setq use-dialog-box nil         ; For dialog regarding stuff, don't use a popup window\12        use-file-dialog nil)       ; Same thing as above, except for files, me thinks\12\12" :post-blank 1 :post-affiliated 1701 :mode nil :granularity element :cached t :parent #102# :org-element--cache-sync-key nil)) 0] #6# 0] [[[[nil nil #105# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7648 :end 7785 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (if (string-equal window-system 'ns)\12      (toggle-frame-maximized)\12    (toggle-frame-fullscreen))\12\12" :post-blank 1 :post-affiliated 7648 :mode planning :granularity element :cached t :parent #106=(section (:begin 7648 :end 7797 :contents-begin 7648 :contents-end 7796 :robust-begin 7648 :robust-end 7794 :post-blank 1 :post-affiliated 7648 :mode section :granularity element :cached t :parent #105# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #106# 0] [[nil nil #109=(section (:begin 7846 :end 7961 :contents-begin 7846 :contents-end 7960 :robust-begin 7846 :robust-end 7958 :post-blank 1 :post-affiliated 7846 :mode section :granularity element :cached t :parent #107# :org-element--cache-sync-key nil)) 0] [nil nil #108# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7846 :end 7929 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (add-hook 'focus-out-hook #'garbage-collect)\12\12" :post-blank 1 :post-affiliated 7846 :mode planning :granularity element :cached t :parent #109# :org-element--cache-sync-key nil)) 0] #107# 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7997 :end 8092 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (add-hook 'before-save-hook 'delete-trailing-whitespace)\12\12" :post-blank 1 :post-affiliated 7997 :mode planning :granularity element :cached t :parent #114=(section (:begin 7997 :end 8135 :contents-begin 7997 :contents-end 8134 :robust-begin 7997 :robust-end 8132 :post-blank 1 :post-affiliated 7997 :mode section :granularity element :cached t :parent #108# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #113=(section (:begin 8164 :end 8469 :contents-begin 8164 :contents-end 8468 :robust-begin 8164 :robust-end 8466 :post-blank 1 :post-affiliated 8164 :mode section :granularity element :cached t :parent #110# :org-element--cache-sync-key nil)) 0] #110# 0] [[nil nil #111# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 8488 :end 9452 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12    (require 'no-littering)\12    (setq no-littering-etc-directory\12      (expand-file-name \"config/\" user-emacs-directory))               ; Puts all configuration files in a \"config\" folder.\12    (setq no-littering-var-directory\12      (expand-file-name \"data/\" user-emacs-directory))                 ; Puts all data files in a \"data\" folder.\12\12  (setq user-emacs-directory \"C:/Users/linyi/AppData/Roaming/.emacs.d/\")\12\12    (require 'recentf)\12    (add-to-list 'recentf-exclude                                          ; Excludes all no-littering files from recentf\12             (recentf-expand-file-name no-littering-var-directory))\12    (add-to-list 'recentf-exclude                                          ; ^\12             (recentf-expand-file-name no-littering-etc-directory))\12\12    (setq custom-file (no-littering-expand-etc-file-name \"custom.el\"))     ; Stores Emacs' configuration interface in the config folder, called custom.el\12" :post-blank 1 :post-affiliated 8488 :mode planning :granularity element :cached t :parent #112=(section (:begin 8488 :end 9523 :contents-begin 8488 :contents-end 9522 :robust-begin 8488 :robust-end 9520 :post-blank 1 :post-affiliated 8488 :mode section :granularity element :cached t :parent #111# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #112# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 8164 :end 8457 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (set-default-coding-systems 'utf-8)\12  (set-language-environment \"UTF-8\")\12  (setq locale-coding-system 'utf-8)\12  (set-terminal-coding-system 'utf-8)\12  (set-keyboard-coding-system 'utf-8)\12  (set-selection-coding-system 'utf-8)\12  (prefer-coding-system 'utf-8)\12" :post-blank 1 :post-affiliated 8164 :mode planning :granularity element :cached t :parent #113# :org-element--cache-sync-key nil)) 0] #114# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2564 :end 7529 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq-default                             ; This sets variables, but for buffer-local vars, it sets it as the default.\12   ad-redefinition-action 'accept           ; This makes it so that when you redefine an existing function, it accepts that, and won't warn you about it. Developer knows best..\12\12   auto-window-vscroll nil                  ; This makes vertical scrolling better for terminals.\12\12   confirm-kill-emacs 'y-or-n-p             ; Allows you to kill Emacs with just y and n. I don't think you need to be typing words out here.\12\12   cursor-in-non-selected-windows nil       ; You're not editing in those windows, so you don't have to know where the cursor is.\12\12   delete-by-moving-to-trash t              ; Takes deleted files to the trash, so you can quickly restore a file if needed.\12\12   display-time-default-load-average nil    ; Removes the CPU load average after the time.\12\12   display-time-format \"%k:%M:%S (%Z)\"      ; Displays the time as \"24 Hours With Fill: Minutes : Seconds (Time Zone)\"\12\12   fill-column 80                           ; This controls when stuff like Auto-Fill-Mode will wrap.\12\12   help-window-select t                     ; This gives the focused window spotlight to help windows when you open them\12\12   indent-tabs-mode nil                     ; The classic Tabs v. Spaces argument. Shut the fuck up.\12\12   inhibit-startup-screen t                 ; This removes the classic but sadly out-of-place starting screen.\12\12   initial-scratch-message \"\"               ; Instead of some helpful statements, we don't give the scratch buffer a message\12\12   mouse-yank-at-point t                    ; Making Emacs mouse yanking a bit better, je pense...\12\12   ns-use-srgb-colorspace nil               ; Using Adobe RGB instead of standardRGB, since it has more colors\12\12   select-enable-clipboard t                ; Mind-melding the system clipboard with the Emacs clipboard, to make stuff easier.\12\12   sentence-end-double-space nil            ; Double SPACES ?!?\12\12   show-help-function nil                   ; 'Tis for the tool bar, which we don't use\12\12   show-trailing-whitespace t               ; Making trailing whitespace more visible\12\12   split-height-threshold 80                ; Some window splitting stuff\12\12   split-width-threshold 40                 ; Same thing here\12\12   tab-width 4                              ; A 4 tab-width is standard\12\12   uniquify-buffer-name-style 'forward      ; In case of the same file name, this'll show the different directories the files are in, with a \"/\".\12\12   window-combination-resize t              ; Resizes the windows proportionally\12\12   x-stretch-cursor nil                     ; Makes the cursor stretch to fit the glyph it's on, which looks kind of bad, actually\12\12   delete-old-versions nil                  ; Storage is cheap, while ideas are ephemeral\12\12   version-control t                        ; Version control is useful always\12\12   ring-bell-function 'ignore               ; Shut up, PLEASE\12\12   inhibit-compacting-font-caches t         ; Uses more memory, but speedier\12\12   recentf-mode t                           ; Shows recent files\12\12   make-backup-files t                      ; Ideas are ephemeral\12\12   display-line-numbers-type 'relative      ; Just in case I use display-line-numbers (Never-ish)\12\12   vc-follow-symlinks t                     ; Symlinks\12\12   use-default-font-for-symbols nil         ; We don't want the same font for everything, unless we specify it.\12\12   frame-inhibit-implied-resize nil         ; Symlink\12\12   pop-up-windows nil)                      ; Just annoying\12\12  (cd \"~/\")                                 ; Takes us to the home directory.\12\12  (delete-selection-mode 1)                 ; Instead of just yanking to the buffer, we remove what we highlighted when we yank to text\12\12  (display-time)                            ; What does this do? Only time will tell.\12\12  (global-auto-revert-mode 1)               ; Changes on the disk means changes in Emacs\12\12  (fringe-mode '(8 . 0))                    ; Leaves some space on the left for git / magit(?)\12\12  (electric-pair-mode t)                    ; Automatically inserts closing parentheses, etc.\12\12  (electric-indent-mode t)                  ; Automatically indents for you\12\12  (defalias 'yes-or-no-p 'y-or-n-p)         ; More conciseness! Yummy\12\12  (global-subword-mode 1)                   ; It can now iterate through camelCase words\12\12  (menu-bar-mode 0)                         ; It's still kind of useful\12\12  (mouse-avoidance-mode 'jump)              ; No more collisions\12\12  (put 'downcase-region 'disabled nil)      ; Enables downcase-region\12\12  (put 'upcase-region 'disabled nil)        ; Enables upcase-region\12\12  (show-paren-mode 1)                       ; Really useful -- it highlights the matching parentheses, or makes it turn a warning color\12\12  (add-hook 'calendar-mode-hook (lambda () (setq show-trailing-whitespace nil)))           ; Trailing whitespace makes it look weird\12\12" :post-blank 1 :post-affiliated 2564 :mode nil :granularity element :cached t :parent #104# :org-element--cache-sync-key nil)) 0] [[[[[nil nil #116=(section (:begin 9563 :end 10142 :contents-begin 9563 :contents-end 10141 :robust-begin 9563 :robust-end 10139 :post-blank 1 :post-affiliated 9563 :mode section :granularity element :cached t :parent #115# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 9576 :end 10125 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'gcmh)\12  (setq gcmh-low-cons-threshold 800000            ; This is the normal garbage-collection rate, when you're actively working\12        gcmh-high-cons-threshold #x40000000       ; This is the idling garbage-collection rate\12        gcmh-idle-delay 15                        ; How much time needs to pass to count as idle delay. Or, you can set it to auto.\12        gcmh-auto-idle-delay-factor 20            ; A factor that calculates the idle delay time, if you set the idle delay to auto.\12        )\12\12" :post-blank 1 :post-affiliated 9576 :mode nil :granularity element :cached t :parent #116# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 9563 :end 9576 :contents-begin 9563 :contents-end 9576 :post-blank 0 :post-affiliated 9563 :mode planning :granularity element :cached t :parent #116# :org-element--cache-sync-key nil)) 0] [[nil nil #118=(section (:begin 10159 :end 10960 :contents-begin 10159 :contents-end 10959 :robust-begin 10159 :robust-end 10957 :post-blank 1 :post-affiliated 10159 :mode section :granularity element :cached t :parent #117# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10182 :end 10930 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun 2e/open-config-org-file ()                                      ; A function that opens up your configuration file\12    (interactive)\12    (find-file (expand-file-name \"config.org\" user-emacs-directory)))\12\12  (defun 2e/add-function-to-multiple-hooks (func hooks)                  ; This adds the same function to multiple hooks\12    (mapc (lambda (hook)\12        (add-hook hook func))\12      hooks))\12\12  (defun 2e-emacs-remind (reminder parent)\12  (with-output-to-temp-buffer \"Reminder\"\12    (princ (format \"%s\\n\" reminder))\12    (princ (format-time-string \"Sent at: %H:%M\\n\"))\12    (princ (format \"Sent by %s\\n\" parent)))\12  (alert-toast-notify `(:title ,parent :message ,reminder :data (:alarm default :long t))))\12" :post-blank 1 :post-affiliated 10182 :mode nil :granularity element :cached t :parent #118# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 10159 :end 10182 :contents-begin 10159 :contents-end 10182 :post-blank 0 :post-affiliated 10159 :mode planning :granularity element :cached t :parent #118# :org-element--cache-sync-key nil)) 0] #117# 0] [[[nil nil #120=(section (:begin 10978 :end 11186 :contents-begin 10978 :contents-end 11184 :robust-begin 10978 :robust-end 11182 :post-blank 2 :post-affiliated 10978 :mode section :granularity element :cached t :parent #119# :org-element--cache-sync-key nil)) 0] [nil nil #16# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 10978 :end 11098 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (add-hook 'prog-mode-hook 'hl-line-mode)  ; Makes the current line be highlighted\12\12" :post-blank 1 :post-affiliated 10978 :mode planning :granularity element :cached t :parent #120# :org-element--cache-sync-key nil)) 0] [[nil nil #122=(section (:begin 11216 :end 13662 :contents-begin 11216 :contents-end 13661 :robust-begin 11216 :robust-end 13659 :post-blank 1 :post-affiliated 11216 :mode section :granularity element :cached t :parent #121# :org-element--cache-sync-key nil)) 0] [nil nil (plain-list (:type unordered :begin 11421 :end 12038 :contents-begin 11421 :contents-end 12038 :structure ((11421 1 "- " nil nil nil 11668) (11432 3 "- " nil nil nil 11668) (11668 1 "- " nil nil nil 12038) (11677 3 "- " nil nil nil 11802) (11802 3 "- " nil nil nil 12038)) :post-blank 0 :post-affiliated 11421 :mode nil :granularity element :cached t :parent #122# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 11216 :end 11421 :contents-begin 11216 :contents-end 11421 :post-blank 0 :post-affiliated 11216 :mode planning :granularity element :cached t :parent #122# :org-element--cache-sync-key nil)) 0] #121# 0] #119# 0] [[[[nil nil #123# 0] [nil nil (paragraph (:begin 13675 :end 13783 :contents-begin 13675 :contents-end 13783 :post-blank 0 :post-affiliated 13675 :mode planning :granularity element :cached t :parent #124=(section (:begin 13675 :end 14167 :contents-begin 13675 :contents-end 14165 :robust-begin 13675 :robust-end 14163 :post-blank 2 :post-affiliated 13675 :mode section :granularity element :cached t :parent #123# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #124# 0] [[nil nil #22# 0] [nil nil #125# 0] (section (:begin 14176 :end 14230 :contents-begin 14176 :contents-end 14230 :robust-begin 14176 :robust-end 14228 :post-blank 0 :post-affiliated 14176 :mode section :granularity element :cached t :parent #22# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 13783 :end 14079 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'fira-code-mode)\12\12  (unless (member \"Fira Code Symbol\" (font-family-list))\12    (fira-code-mode-install-fonts))\12\12  (fira-code-mode-set-font)\12  (setq fira-code-mode-disabled-ligatures '(\"*\" \"?=\" \"[]\" \"x\"))\12  (add-hook 'prog-mode-hook 'fira-code-mode)\12\12" :post-blank 1 :post-affiliated 13783 :mode nil :granularity element :cached t :parent #124# :org-element--cache-sync-key nil)) 0] [[[nil nil (paragraph (:begin 14245 :end 14268 :contents-begin 14245 :contents-end 14268 :post-blank 0 :post-affiliated 14245 :mode planning :granularity element :cached t :parent #126=(section (:begin 14245 :end 14364 :contents-begin 14245 :contents-end 14361 :robust-begin 14245 :robust-end 14359 :post-blank 3 :post-affiliated 14245 :mode section :granularity element :cached t :parent #125# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #24# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 14268 :end 14346 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (load-theme 'crypt t)  ; Loads my theme\12\12" :post-blank 1 :post-affiliated 14268 :mode nil :granularity element :cached t :parent #126# :org-element--cache-sync-key nil)) 0] [[nil nil #129=(section (:begin 14395 :end 14486 :contents-begin 14395 :contents-end 14485 :robust-begin 14395 :robust-end 14483 :post-blank 1 :post-affiliated 14395 :mode section :granularity element :cached t :parent #127# :org-element--cache-sync-key nil)) 0] [nil nil #128# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 14395 :end 14458 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'all-the-icons)\12\12" :post-blank 1 :post-affiliated 14395 :mode planning :granularity element :cached t :parent #129# :org-element--cache-sync-key nil)) 0] #127# 0] #126# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 12038 :end 13650 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (cond ((string-equal window-system 'w32) (progn\12                                              (when (member \"Segoe UI Emoji\" (font-family-list))\12                                                (set-fontset-font t 'symbol (font-spec :family \"Segoe UI Emoji\") nil 'prepend)\12                                                (set-fontset-font \"fontset-default\" '(#xFE00 . #xFE0F) \"Segoe UI Emoji\"))\12\12                                              (when (member \"Times New Roman\" (font-family-list))\12                                                (set-fontset-font \"fontset-default\" 'unicode \"Times New Roman\"))\12\12                                              (when (member \"Unifont\" (font-family-list))\12                                                (set-fontset-font t nil \"Unifont\" nil 'append)\12                                                (set-fontset-font t nil \"Unifont Upper\" nil 'append)))\12         (string-equal window-system 'x) (progn\12                                            (when (member \"Noto Color Emoji\" (font-family-list))\12                                              (set-fontset-font t 'symbol (font-spec :family \"Noto Color Emoji\") nil 'prepend)\12                                              (set-fontset-font \"fontset-default\" '(#xFE00 . #xFE0F) \"Noto Color Emoji\"))\12\12                                            (when (member \"Unifont\" (font-family-list))\12                                              (set-fontset-font t nil \"Unifont\" nil 'append)\12                                              (set-fontset-font t nil \"Unifont Upper\" nil 'append)))))\12\12" :post-blank 1 :post-affiliated 12038 :mode nil :granularity element :cached t :parent #122# :org-element--cache-sync-key nil)) 0] #115# 0] [[[[[[nil nil (paragraph (:begin 14502 :end 14567 :contents-begin 14502 :contents-end 14567 :post-blank 0 :post-affiliated 14502 :mode planning :granularity element :cached t :parent #131=(section (:begin 14502 :end 14830 :contents-begin 14502 :contents-end 14829 :robust-begin 14502 :robust-end 14827 :post-blank 1 :post-affiliated 14502 :mode section :granularity element :cached t :parent #128# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #130# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 14567 :end 14743 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (add-hook 'prog-mode-hook 'rainbow-mode)     ; Enables rainbow mode (colors the background of colors, e.g. #FFFFFF) for programming modes\12\12" :post-blank 1 :post-affiliated 14567 :mode nil :granularity element :cached t :parent #131# :org-element--cache-sync-key nil)) 0] [[nil nil (paragraph (:begin 14854 :end 14875 :contents-begin 14854 :contents-end 14875 :post-blank 0 :post-affiliated 14854 :mode planning :granularity element :cached t :parent #133=(section (:begin 14854 :end 15110 :contents-begin 14854 :contents-end 15108 :robust-begin 14854 :robust-end 15106 :post-blank 2 :post-affiliated 14854 :mode section :granularity element :cached t :parent #130# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #132# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 14875 :end 15022 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (add-hook 'prog-mode-hook #'rainbow-delimiters-mode)  ; Enables Rainbow Delimiters for Programming Languages\12\12" :post-blank 1 :post-affiliated 14875 :mode nil :granularity element :cached t :parent #133# :org-element--cache-sync-key nil)) 0] #133# 0] [[[nil nil #134# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters ":results silent" :begin 15899 :end 16870 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun 2e/mode-line-truncate-string-p (str)\12    \"returns non-nil if the string should be truncated\"\12    (or (< (window-total-width) split-width-threshold)\12         (and (> (length str) mode-line-truncate-length)\12         (not (one-window-p :no-minibuffer)))))\12\12  (defvar-local mode-line-truncate-length 15)                          ; How long should a string at least be until being truncated\12\12  (defun 2e/mode-line-truncate-string (str)                        ; Truncates the string function\12    \"Returns the truncated string, else return the original string.\"\12    (if (2e/mode-line-truncate-string-p str)                              ; If the string should be truncated\12        (concat (substring str 0 mode-line-truncate-length) \"...\")     ; Add the first 9 characters of the string and append a '...' at the end.\12      str))                                                            ; Else, return original string\12" :post-blank 1 :post-affiliated 15899 :mode planning :granularity element :cached t :parent #135=(section (:begin 15899 :end 16870 :contents-begin 15899 :contents-end 16869 :robust-begin 15899 :robust-end 16867 :post-blank 1 :post-affiliated 15899 :mode section :granularity element :cached t :parent #134# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #135# 0] [[nil nil #138=(section (:begin 16912 :end 17605 :contents-begin 16912 :contents-end 17604 :robust-begin 16912 :robust-end 17602 :post-blank 1 :post-affiliated 16912 :mode section :granularity element :cached t :parent #136# :org-element--cache-sync-key nil)) 0] [nil nil #137# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 16912 :end 17575 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun 2e/mode-line-right-align-rest-width ()\12    \"Returns the length to be conserved at the right side of the modeline.\"\12    (1+ (length display-time-string)))\12\12  (defun 2e/mode-line-right-align ()\12    \"Returns empty space using the default 'mode-line' face and leaving RESERVE space on the right.\"\12    (propertize \" \"\12            'display `(space . (:align-to (- (+ right right-fringe right-margin)  ,(2e/mode-line-right-align-rest-width)))))) ; This adds up all of the space at the right of the modeline, and subtracts the space we want to conserve\12\12  (defun 2e/static-blank ()\12    \"Returns a string of one space.\"\12    \" \")\12" :post-blank 1 :post-affiliated 16912 :mode planning :granularity element :cached t :parent #138# :org-element--cache-sync-key nil)) 0] #136# 0] #31# 0] [[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 17629 :end 19366 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun 2e/mode-line-modified ()\12    \"This returns a all-the-icons icon based on the modified state of the buffer.\"\12    (let* (\12           (config-alist                                                             ; Lets `config-alist` to be a list of information that we pull from\12          '((\"*\" all-the-icons-faicon \"chain-broken\" :height 1.2 :v-adjust -0.0)     ; If it's `*`, then call `all-the-icons-faicon` on \"chain-broken :height 1.2 :v-adjust -0.0\"\12            (\"-\" all-the-icons-faicon \"link\" :height 1.2 :v-adjust -0.0)             ; If it's `-`, then call `all-the-icons-faicon` on \"link :height 1.2 :v-adjust -0.0\"\12            (\"%\" all-the-icons-faicon \"lock\" :height 1.2 :v-adjust 0.1)))            ; If it's `%`, then call `all-the-icons-faicon` on \"lock :height 1.2 :v-adjust 0.1\"\12         (result (cdr (assoc (format-mode-line \"%*\") config-alist))))                ; Since it's `let*`, the variables are bound sequentially and so `result` can use `config-alist`.\12        (propertize (format \"%s\" (apply (car result) (cdr result)))                  ; We return a propertized string\12            'face `(:family ,(all-the-icons-faicon-family))                          ; The family of the font is the string returned from the function `all-the-icons-faicon-family`\12            'help-echo (if (string-equal (cadr result) \"chain-broken\")               ; We add a minibuffer display when we hover over the icon.\12                   (format \"Buffer: `%s` is modified.\" (buffer-name))\12                     (if (string-equal (cadr result) \"link\")\12                     (format \"Buffer: `%s` is saved.\" (buffer-name))\12                     (format \"Buffer: `%s` is read-only.\" (buffer-name)))))))\12" :post-blank 1 :post-affiliated 17629 :mode planning :granularity element :cached t :parent #147=(section (:begin 17629 :end 19402 :contents-begin 17629 :contents-end 19401 :robust-begin 17629 :robust-end 19399 :post-blank 1 :post-affiliated 17629 :mode section :granularity element :cached t :parent #137# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #142=(section (:begin 19440 :end 21165 :contents-begin 19440 :contents-end 21164 :robust-begin 19440 :robust-end 21162 :post-blank 1 :post-affiliated 19440 :mode section :granularity element :cached t :parent #139# :org-element--cache-sync-key nil)) 0] #139# 0] [[nil nil #140# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters ":results silent" :begin 21210 :end 23219 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun 2e/mode-line-buffer-name ()\12    (2e/mode-line-truncate-string\12     (format \"%s\"\12             (propertize (2e/mode-line-truncate-string\12                          (buffer-name))\12                         'help-echo (format \"Buffer Name: `%s`\" (buffer-name))\12                         'face `(:foreground \"#dfffee\")))))\12\12  (defun 2e/mode-line-mode-icon ()\12    \"Returns the mode icon of the buffer.\"\12    (propertize\12     (format \"%s\" (all-the-icons-icon-for-mode major-mode :v-adjust 0.0))\12     'help-echo (format \"Major Mode: `%s`\" major-mode)\12     'face `(:height 170 :family ,(all-the-icons-icon-family-for-buffer))))\12\12  (defun 2e/mode-line-github-vc ()\12    (if vc-mode\12        (let ((branch (cdr (string-split vc-mode \"[:-]\"))))\12          (concat\12           (propertize\12            (format \"%s \" (all-the-icons-octicon \"git-branch\"))\12            'face `(:family ,(all-the-icons-octicon-family) :height 1.3)\12            'display `(raise -0.1))\12           (propertize (2e/mode-line-truncate-string\12                        (format \"%s\" branch))\12                       'face `(:height 0.9))))\12      (concat\12       (propertize\12        (format \"%s \" (all-the-icons-octicon \"git-branch\"))\12        'face `(:family ,(all-the-icons-octicon-family) :height 1.3)\12        'display `(raise -0.1))\12       (propertize (format \"%s\" \"(git init)\") 'face `(:height 0.9)))))\12\12  (defun 2e/mode-line-mode-vc-info ()\12    (if vc-mode\12        (let ((branch (cdr (string-split vc-mode \"[:-]\"))))\12          (concat\12           \"(\"\12           (2e/mode-line-mode-icon)\12           \", \"\12           (propertize (2e/mode-line-truncate-string\12                        (format \"#%s\" branch))\12                       'face `(:height 0.9))\12           \")\"))\12      (2e/mode-line-mode-icon)))\12\12\12  (require 'org-timer)\12  (defun 2e/mode-line-org-timer ()\12    (unless (eq (org-timer-value-string) \"0:00:00 \")\12      (propertize (format \"Timer: %s\" (org-timer-value-string)) 'face `(:weight bold))))\12\12" :post-blank 0 :post-affiliated 21210 :mode planning :granularity element :cached t :parent #141=(section (:begin 21210 :end 23219 :contents-begin 21210 :contents-end 23219 :robust-begin 21210 :robust-end 23217 :post-blank 0 :post-affiliated 21210 :mode section :granularity element :cached t :parent #140# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #141# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 19440 :end 21119 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun 2e/mode-line-region-info ()\12    \"Returns a string containing information from the current region, if there is any. The left number is the lines in the region, and the right number is the characters in the region.\"\12    (when mark-active                                                ; When the mark is active (there's actually a highlighted region)\12    (let ((lines (count-lines (region-beginning) (region-end)))      ; Set `lines` to be the amount of lines in the region\12          (chars (- (region-end) (region-beginning))))               ; Sets `chars` to be the characters in the region\12      (concat                                                        ; Adds the pencil octicon to the information\12       (propertize (format \"%s \" (all-the-icons-octicon \"pencil\"))\12                   'face `(:family ,(all-the-icons-octicon-family))\12           'display `(raise -0.0))\12       (propertize (format \"%s:%s\" lines chars)\12                   'face `(:height 0.9))))))\12\12  (defun 2e/mode-line-region-buffer-info ()\12    \"Returns either the output of `2e/mode-line-region-info`, or if there isn't a region marked, then return a string containing information from the entire buffer, with the left number being the lines in the buffer, and the right number being the characters in the buffer.\"\12    (if mark-active\12      (2e/mode-line-region-info)\12    (concat\12     (propertize\12      (format \"%s\" (all-the-icons-octicon \"pencil\"))\12      'face `(:family ,(all-the-icons-octicon-family))\12      'display `(raise -0.0))\12     (propertize\12      (concat\12       (format \"%s:\" (car (buffer-line-statistics)))\12       \"%i\")\12      'face `(:height 0.9)))))\12" :post-blank 1 :post-affiliated 19440 :mode planning :granularity element :cached t :parent #142# :org-element--cache-sync-key nil)) 0] [[[nil nil #145=(section (:begin 23240 :end 24064 :contents-begin 23240 :contents-end 24063 :robust-begin 23240 :robust-end 24061 :post-blank 1 :post-affiliated 23240 :mode section :granularity element :cached t :parent #143# :org-element--cache-sync-key nil)) 0] [nil nil #144# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 23240 :end 24032 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (setq display-time-interval 1)                         ; Updates the time every second\12  (setq-default display-time-default-load-average nil)   ; Stops the time from displaying the load average\12  (display-time)                                         ; Starts displaying the time\12\12  (defun 2e/mode-line-time ()\12    \"returns the time with the associated clock icon with it.\"\12    (let* ((hour (string-to-number (format-time-string \"%I\")))\12           (icon (all-the-icons-wicon (format \"time-%s\" hour) :height 1.3 :v-adjust 0.0)))\12      (concat\12       (propertize (format-time-string \" [%d/%a] %k:%M:%S (%z) \") 'face `(:height 0.9))\12       (propertize (format \"%s \" icon) 'face `(:height 1.0 :family ,(all-the-icons-wicon-family)) 'display '(raise -0.0)))))\12\12" :post-blank 1 :post-affiliated 23240 :mode planning :granularity element :cached t :parent #145# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters ":results silent" :begin 24083 :end 24712 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq-default mode-line-format\12                '(\"%e\"\12                  (:eval (2e/mode-line-modified))\12                  \" \"\12                  (:eval (2e/mode-line-buffer-name))\12                  \" \"\12                  (:eval (2e/mode-line-mode-vc-info))\12                  \" | \"\12                  (:eval (2e/mode-line-region-buffer-info))\12                  \" | \"\12                  (:eval (2e/mode-line-org-timer))\12                  (:eval (2e/mode-line-right-align))\12                  (:eval (2e/mode-line-time))\12                  ))\12\12  (setq-default header-line-format nil)\12\12" :post-blank 1 :post-affiliated 24083 :mode planning :granularity element :cached t :parent #146=(section (:begin 24083 :end 24725 :contents-begin 24083 :contents-end 24723 :robust-begin 24083 :robust-end 24721 :post-blank 2 :post-affiliated 24083 :mode section :granularity element :cached t :parent #144# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (section (:begin 24743 :end 24920 :contents-begin 24743 :contents-end 24920 :robust-begin 24743 :robust-end 24918 :post-blank 0 :post-affiliated 24743 :mode section :granularity element :cached t :parent #42# :org-element--cache-sync-key nil)) 0] #42# 0] #146# 0] #143# 0] #147# 0] [[[[[nil nil #149=(section (:begin 24929 :end 25023 :contents-begin 24929 :contents-end 25022 :robust-begin 24929 :robust-end 25020 :post-blank 1 :post-affiliated 24929 :mode section :granularity element :cached t :parent #148# :org-element--cache-sync-key nil)) 0] [nil nil #43# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 24929 :end 25007 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'meow)\12\12  (meow-global-mode 1)\12\12" :post-blank 1 :post-affiliated 24929 :mode planning :granularity element :cached t :parent #149# :org-element--cache-sync-key nil)) 0] [[nil nil #150# 0] [nil nil (paragraph (:begin 26436 :end 26490 :contents-begin 26436 :contents-end 26490 :post-blank 0 :post-affiliated 26436 :mode planning :granularity element :cached t :parent #151=(section (:begin 26436 :end 27333 :contents-begin 26436 :contents-end 27332 :robust-begin 26436 :robust-end 27330 :post-blank 1 :post-affiliated 26436 :mode section :granularity element :cached t :parent #150# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #151# 0] #152# 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 26621 :end 27321 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (meow-define-keys\12      ;; state\12      'normal\12    ;; Movement Related Bindings\12    '(\"w\" . meow-prev)\12    '(\"s\" . meow-next)\12    '(\"a\" . meow-left)\12    '(\"d\" . meow-right)\12    '(\"z\" . backward-word)\12    '(\"x\" . forward-word)\12    '(\"q\" . beginning-of-line)\12    '(\"e\" . end-of-line)\12    '(\"c\" . avy-goto-char)\12    ;; Selection / Editing Related Bindings\12    '(\"i\" . meow-bounds-of-thing)\12    '(\"u\" . \"C-u - M-d\")\12    '(\"j\" . meow-kill)\12    '(\"y\" . kill-word)\12    '(\"p\" . keyboard-quit)\12    '(\"m\" . hydra-windows/body)\12    '(\"o\" . meow-insert)\12    '(\"k\" . consult-buffer)\12    '(\"l\" . consult-line)\12    '(\";\" . hydra-clipboard/body)\12    '(\"]\" . set-mark-command))\12\12\12" :post-blank 1 :post-affiliated 26621 :mode nil :granularity element :cached t :parent #151# :org-element--cache-sync-key nil)) 0] [nil nil #155=(section (:begin 27357 :end 28253 :contents-begin 27357 :contents-end 28251 :robust-begin 27357 :robust-end 28249 :post-blank 2 :post-affiliated 27357 :mode section :granularity element :cached t :parent #153# :org-element--cache-sync-key nil)) 0] #153# 0] [[nil nil #47# 0] [nil nil #154# 0] (section (:begin 28267 :end 28365 :contents-begin 28267 :contents-end 28365 :robust-begin 28267 :robust-end 28363 :post-blank 0 :post-affiliated 28267 :mode section :granularity element :cached t :parent #47# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 27357 :end 28052 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (setq meow-char-thing-table\12        (list (append (string-to-list \"i\") 'round)\12              (append (string-to-list \"o\") 'square)\12              (append (string-to-list \"u\") 'curly)\12              (append (string-to-list \"w\") 'string)\12              (append (string-to-list \"q\") 'symbol)\12              (append (string-to-list \"~\") 'window)\12              (append (string-to-list \"s\") 'buffer)\12              (append (string-to-list \"a\") 'paragraph)\12              (append (string-to-list \"d\") 'line)\12              (append (string-to-list \"e\") 'visual-line)\12              (append (string-to-list \"f\") 'defun)\12              (append (string-to-list \"k\") 'sentence)))\12" :post-blank 1 :post-affiliated 27357 :mode planning :granularity element :cached t :parent #155# :org-element--cache-sync-key nil)) 0] (plain-list (:type unordered :begin 26490 :end 26621 :contents-begin 26490 :contents-end 26621 :structure ((26490 1 "- " nil nil nil 26527) (26527 1 "- " nil nil nil 26558) (26558 1 "- " nil nil nil 26592) (26592 1 "- " nil nil nil 26621)) :post-blank 0 :post-affiliated 26490 :mode nil :granularity element :cached t :parent #151# :org-element--cache-sync-key nil)) 0] [[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 28376 :end 28481 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq doc-view-scale-internally t\12        doc-view-resolution 600)\12\12" :post-blank 1 :post-affiliated 28376 :mode planning :granularity element :cached t :parent #163=(section (:begin 28376 :end 28499 :contents-begin 28376 :contents-end 28498 :robust-begin 28376 :robust-end 28496 :post-blank 1 :post-affiliated 28376 :mode section :granularity element :cached t :parent #154# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #159=(section (:begin 28512 :end 28606 :contents-begin 28512 :contents-end 28604 :robust-begin 28512 :robust-end 28602 :post-blank 2 :post-affiliated 28512 :mode section :granularity element :cached t :parent #156# :org-element--cache-sync-key nil)) 0] #156# 0] [[nil nil #157# 0] [nil nil (paragraph (:begin 28628 :end 28679 :contents-begin 28628 :contents-end 28679 :post-blank 0 :post-affiliated 28628 :mode planning :granularity element :cached t :parent #158=(section (:begin 28628 :end 29074 :contents-begin 28628 :contents-end 29072 :robust-begin 28628 :robust-end 29070 :post-blank 2 :post-affiliated 28628 :mode section :granularity element :cached t :parent #157# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #158# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 28512 :end 28593 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'pdf-tools)\12  (pdf-tools-install)\12\12" :post-blank 1 :post-affiliated 28512 :mode planning :granularity element :cached t :parent #159# :org-element--cache-sync-key nil)) 0] [[[nil nil #52# 0] [nil nil #160# 0] (section (:begin 29085 :end 29139 :contents-begin 29085 :contents-end 29139 :robust-begin 29085 :robust-end 29137 :post-blank 0 :post-affiliated 29085 :mode section :granularity element :cached t :parent #52# :org-element--cache-sync-key nil)) 0] [[nil nil (paragraph (:begin 29151 :end 29194 :contents-begin 29151 :contents-end 29194 :post-blank 0 :post-affiliated 29151 :mode planning :granularity element :cached t :parent #162=(section (:begin 29151 :end 29649 :contents-begin 29151 :contents-end 29648 :robust-begin 29151 :robust-end 29646 :post-blank 1 :post-affiliated 29151 :mode section :granularity element :cached t :parent #160# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #161# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 29194 :end 29561 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq org-ellipsis nil)\12  (setq org-startup-folded t)\12  (add-hook 'org-mode-hook 'visual-line-mode)\12  (setq org-startup-indented t)\12\12  (setq org-modules '(org-bibtex\12                      org-habit\12                      org-info\12                      org-bbdb\12                      org-inlinetask\12                      org-mew))\12\12" :post-blank 1 :post-affiliated 29194 :mode nil :granularity element :cached t :parent #162# :org-element--cache-sync-key nil)) 0] #162# 0] (src-block (:language "emacs-lisp" :switches nil :parameters ":results silent" :begin 28679 :end 29048 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun youtube-dl (link)\12    \"Interactively downloads a youtube video as music.\"\12    (interactive \"MYoutube Link: \")\12    (async-shell-command (format \"youtube-dl --extract-audio --output=\\\"C:/Users/linyi/OneDrive/Documents/Music/%%(title)s-%%(id)s.%%(ext)s\\\" --restrict-filenames --audio-format=\\\"mp3\\\" %s\" link)))\12\12" :post-blank 1 :post-affiliated 28679 :mode nil :granularity element :cached t :parent #158# :org-element--cache-sync-key nil)) 0] #163# 0] #148# 0] #131# 0] [[[[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 29667 :end 29917 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'org-edit-latex)\12\12  (org-babel-do-load-languages\12   'org-babel-load-languages\12   '((emacs-lisp . t)\12     (latex . t)))\12\12  (setq TeX-auto-save t)\12  (setq TeX-parse-self t)\12  (setq-default TeX-master nil)\12\12" :post-blank 1 :post-affiliated 29667 :mode planning :granularity element :cached t :parent #218=(section (:begin 29667 :end 29929 :contents-begin 29667 :contents-end 29928 :robust-begin 29667 :robust-end 29926 :post-blank 1 :post-affiliated 29667 :mode section :granularity element :cached t :parent #161# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #167=(section (:begin 29944 :end 30159 :contents-begin 29944 :contents-end 30158 :robust-begin 29944 :robust-end 30156 :post-blank 1 :post-affiliated 29944 :mode section :granularity element :cached t :parent #164# :org-element--cache-sync-key nil)) 0] #164# 0] [[nil nil #165# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 30171 :end 31084 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq org-todo-keywords\12        '((sequence \"TODO(t)\" \"WORKING(w)\" \"SUBMIT(s)\" \"|\" \"DONE(d)\" \"PUSHED(p)\" \"RAISED(r)\" \"CANCELED(c)\")))\12                                          ; TODO: Tasks I haven't started yet and will do in the near near future\12                                          ; WORKING: Tasks I'm currently working on -- this shouldn't exceed 3.\12                                          ; SUBMIT: Tasks that I've finished, and am waiting to submit it\12                                          ; DONE: Tasks that I don't have to ever think about again\12                                          ; PUSHED: Tasks in old task lists that has been pushed to future task lists\12                                          ; RAISED: Tasks in old task lists that has been raised up a level\12                                          ; CANCELED: Tasks that has been canceled\12\12" :post-blank 1 :post-affiliated 30171 :mode planning :granularity element :cached t :parent #166=(section (:begin 30171 :end 31200 :contents-begin 30171 :contents-end 31199 :robust-begin 30171 :robust-end 31197 :post-blank 1 :post-affiliated 30171 :mode section :granularity element :cached t :parent #165# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #166# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 29944 :end 30140 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'org-bullets)\12  (setq org-hide-leading-stars t)\12  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))\12  (setq org-bullets-bullet-list '(\"⁖\"))\12\12" :post-blank 1 :post-affiliated 29944 :mode planning :granularity element :cached t :parent #167# :org-element--cache-sync-key nil)) 0] [[[nil nil #169=(section (:begin 31237 :end 33844 :contents-begin 31237 :contents-end 33843 :robust-begin 31237 :robust-end 33841 :post-blank 1 :post-affiliated 31237 :mode section :granularity element :cached t :parent #168# :org-element--cache-sync-key nil)) 0] [nil nil #62# 0] (src-block (:language "emacs-lisp" :switches nil :parameters ":tangle no" :begin 31237 :end 33832 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; (setq org-default-notes-file (concat \"C:/Users/linyi/OneDrive/Documents/School/default.org\"))\12\12  ;; (setq org-capture-templates\12  ;;       '((\"f\" \"Future Task\" entry (file (2e/find-create-task-list \"F\")))\12  ;;         (\"q\" \"Quick Task\" entry (file (2e/find-create-task-list \"Q\")))))\12\12  ;; (defvar 2e/current-task-list\12  ;;   nil\12  ;;   \"Holds the current task list.\")\12\12  ;; (defun 2e/parse-task-list-date (full-path)\12  ;;   \"Takes in an ABSOLUTE file path and parses it into a time. This is intended for usage for my task list structure.\"\12  ;;   (let* ((filename (car (last (split-string full-path (rx \"/\")))))\12  ;;          (date-part (split-string filename (rx \".\")))\12  ;;          (date-list (split-string (car date-part) \"-\")))\12  ;;     (date-to-time (format \"%s, %s %s %s\"\12  ;;                           (caddr date-list)\12  ;;                           (cadr date-list)\12  ;;                           (car date-list)\12  ;;                           (cadr (split-string (car (last (butlast (split-string\12  ;;                                                                    (file-name-parent-directory (file-name-parent-directory full-path))\12  ;;                                                                    (rx \"/\")))))))))))\12\12  ;; (defun 2e/incremental-search-through (list-of-stuff search-for)\12  ;;   \"goes through \")\12\12\12  ;; ;; (defun 2e/find-current-task-list ()\12  ;; ;;   )\12\12  ;; (defun 2e/create-new-task-list ()\12  ;;   (let* ((task-list-dir (concat\12  ;;                          \"C:/Users/linyi/OneDrive/Documents/School/Planner/\"\12  ;;                          (format-time-string \"%B %Y\")\12  ;;                          \"/Task Pages/\"))\12  ;;          (task-list-file (concat\12  ;;                           task-list-dir\12  ;;                           \"/\"\12  ;;                           (format-time-string \"%B-%d-%a.org\"))))\12  ;;     (condition-case nil (make-directory task-list-dir)\12  ;;       (error nil))\12  ;;     (with-temp-buffer (write-file task-list-file))\12  ;;     (setq 2e/current-task-list task-list-file)))\12\12  ;; (defun 2e/check-task-list ()\12  ;;   \"Returns t if you need to make a new task list, else nil. If there's more than 23 todos in the list, it'll return t.\"\12  ;;   (if (>= (length (org-map-entries t \"LEVEL=1\" '(list 2e/current-task-list))) 24)\12  ;;       (length (org-map-entries t \"LEVEL=1\" '(list 2e/current-task-list)))\12  ;;     nil))\12\12  ;; (setq org-agenda-files (if (2e/check-task-list)\12  ;;                            (2eo/create-new-task-list)\12  ;;                          2e/current-task-list))\12\12" :post-blank 1 :post-affiliated 31237 :mode planning :granularity element :cached t :parent #169# :org-element--cache-sync-key nil)) 0] [[nil nil #170# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 33972 :end 34245 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (setq org-cite-export-processors\12        '((md . (csl \"chicago-fullnote-bibliography.csl\"))\12          (latex biblatex)\12          (odt . (csl \"chicago-fullnote-bibliography.csl\"))\12          (t . (csl \"modern-language-association.csl\"))))\12" :post-blank 1 :post-affiliated 33972 :mode planning :granularity element :cached t :parent #171=(section (:begin 33972 :end 34485 :contents-begin 33972 :contents-end 34484 :robust-begin 33972 :robust-end 34482 :post-blank 1 :post-affiliated 33972 :mode section :granularity element :cached t :parent #170# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #171# 0] (section (:begin 33867 :end 33951 :contents-begin 33867 :contents-end 33951 :robust-begin 33867 :robust-end 33949 :post-blank 0 :post-affiliated 33867 :mode section :granularity element :cached t :parent #62# :org-element--cache-sync-key nil)) 0] #168# 0] [[[[nil nil #173=(section (:begin 34495 :end 34569 :contents-begin 34495 :contents-end 34567 :robust-begin 34495 :robust-end 34565 :post-blank 2 :post-affiliated 34495 :mode section :granularity element :cached t :parent #172# :org-element--cache-sync-key nil)) 0] [nil nil #68# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 34495 :end 34548 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (require 'zotra)\12" :post-blank 1 :post-affiliated 34495 :mode planning :granularity element :cached t :parent #173# :org-element--cache-sync-key nil)) 0] [[nil nil #174# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 34828 :end 35159 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'vertico-posframe)\12  (vertico-posframe-mode 1)\12  (vertico-mode 1)\12  (vertico-reverse-mode 1)\12  (vertico-mouse-mode 1)\12  (vertico-indexed-mode 1)\12  (setq vertico-count 15)\12  (setq vertico-resize 'grow-only)\12  (setq vertico-cycle t)\12  (global-set-key (kbd \"M-SPC\") 'vertico-exit-input)\12\12" :post-blank 1 :post-affiliated 34828 :mode planning :granularity element :cached t :parent #175=(section (:begin 34828 :end 35193 :contents-begin 34828 :contents-end 35191 :robust-begin 34828 :robust-end 35189 :post-blank 2 :post-affiliated 34828 :mode section :granularity element :cached t :parent #174# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #175# 0] (section (:begin 34579 :end 34819 :contents-begin 34579 :contents-end 34819 :robust-begin 34579 :robust-end 34817 :post-blank 0 :post-affiliated 34579 :mode section :granularity element :cached t :parent #68# :org-element--cache-sync-key nil)) 0] [[[nil nil (section (:begin 35201 :end 35254 :contents-begin 35201 :contents-end 35254 :robust-begin 35201 :robust-end 35252 :post-blank 0 :post-affiliated 35201 :mode section :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] [nil nil #177=(section (:begin 35276 :end 35500 :contents-begin 35276 :contents-end 35499 :robust-begin 35276 :robust-end 35497 :post-blank 1 :post-affiliated 35276 :mode section :granularity element :cached t :parent #176# :org-element--cache-sync-key nil)) 0] #176# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 35330 :end 35467 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (persistent-scratch-setup-default)\12  (setq persistent-scratch-backup-directory \"~/scratch-backups/\")\12" :post-blank 1 :post-affiliated 35330 :mode nil :granularity element :cached t :parent #177# :org-element--cache-sync-key nil)) 0] [nil nil #179=(section (:begin 35520 :end 35748 :contents-begin 35520 :contents-end 35747 :robust-begin 35520 :robust-end 35745 :post-blank 1 :post-affiliated 35520 :mode section :granularity element :cached t :parent #178# :org-element--cache-sync-key nil)) 0] #178# 0] (paragraph (:begin 35276 :end 35330 :contents-begin 35276 :contents-end 35330 :post-blank 0 :post-affiliated 35276 :mode planning :granularity element :cached t :parent #177# :org-element--cache-sync-key nil)) 0] #65# 0] #172# 0] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 35566 :end 35732 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq spacious-padding-widths '(:internal-border-width 0 :right-divider-width 1 :scroll-bar-width 0))\12  (spacious-padding-mode)\12\12" :post-blank 1 :post-affiliated 35566 :mode nil :granularity element :cached t :parent #179# :org-element--cache-sync-key nil)) 0] [nil nil #181=(section (:begin 35759 :end 35975 :contents-begin 35759 :contents-end 35974 :robust-begin 35759 :robust-end 35972 :post-blank 1 :post-affiliated 35759 :mode section :granularity element :cached t :parent #180# :org-element--cache-sync-key nil)) 0] #180# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 35857 :end 35959 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (require 'keyfreq)\12  (keyfreq-mode 1)\12  (keyfreq-autosave-mode 1)\12" :post-blank 1 :post-affiliated 35857 :mode nil :granularity element :cached t :parent #181# :org-element--cache-sync-key nil)) 0] [nil nil #188=(section (:begin 35992 :end 36566 :contents-begin 35992 :contents-end 36565 :robust-begin 35992 :robust-end 36563 :post-blank 1 :post-affiliated 35992 :mode section :granularity element :cached t :parent #182# :org-element--cache-sync-key nil)) 0] #182# 0] (paragraph (:begin 35759 :end 35857 :contents-begin 35759 :contents-end 35857 :post-blank 0 :post-affiliated 35759 :mode planning :granularity element :cached t :parent #181# :org-element--cache-sync-key nil)) 0] [[[nil nil #183# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 36578 :end 36973 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'olivetti)\12  (2e/add-function-to-multiple-hooks 'olivetti-mode '(text-mode-hook\12                                                   prog-mode-hook\12                                                   Info-mode-hook\12                                                   pdf-view-mode-hook\12                                                   org-mode-hook))\12" :post-blank 1 :post-affiliated 36578 :mode planning :granularity element :cached t :parent #184=(section (:begin 36578 :end 37075 :contents-begin 36578 :contents-end 37074 :robust-begin 36578 :robust-end 37072 :post-blank 1 :post-affiliated 36578 :mode section :granularity element :cached t :parent #183# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #184# 0] [[nil nil #187=(section (:begin 37091 :end 37781 :contents-begin 37091 :contents-end 37780 :robust-begin 37091 :robust-end 37778 :post-blank 1 :post-affiliated 37091 :mode section :granularity element :cached t :parent #185# :org-element--cache-sync-key nil)) 0] [nil nil #186# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 37091 :end 37747 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (set-frame-parameter nil 'alpha-background 70)\12  (add-to-list 'default-frame-alist '(alpha-background . 70))\12\12  (defun toggle-transparency ()\12    (interactive)\12    (let ((alpha (frame-parameter nil 'alpha)))\12      (set-frame-parameter\12       nil 'alpha\12       (if (eql (cond ((numberp alpha) alpha)\12                      ((numberp (cdr alpha)) (cdr alpha))\12                      ;; Also handle undocumented (<active> <inactive>) form.\12                      ((numberp (cadr alpha)) (cadr alpha)))\12                100)\12           '(85 . 50)\12         '(100 . 100)))))\12\12  (global-set-key (kbd \"C-c t\") 'toggle-transparency)\12" :post-blank 1 :post-affiliated 37091 :mode planning :granularity element :cached t :parent #187# :org-element--cache-sync-key nil)) 0] #185# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 35992 :end 36122 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (indent-guide-global-mode t)\12  (add-hook 'org-mode-hook (lambda () (indent-guide-mode -1)))\12\12" :post-blank 1 :post-affiliated 35992 :mode planning :granularity element :cached t :parent #188# :org-element--cache-sync-key nil)) 0] [[[[nil nil (paragraph (:begin 37795 :end 37935 :contents-begin 37795 :contents-end 37935 :post-blank 0 :post-affiliated 37795 :mode planning :granularity element :cached t :parent #190=(section (:begin 37795 :end 38258 :contents-begin 37795 :contents-end 38257 :robust-begin 37795 :robust-end 38255 :post-blank 1 :post-affiliated 37795 :mode section :granularity element :cached t :parent #186# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #189# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 37935 :end 38196 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'marginalia)\12  (marginalia-mode 1)\12  (setq marginalia-max-relative-age 0)\12  (setq marginalia-align 'right)\12  (all-the-icons-completion-mode)\12  (add-hook 'marginalia-mode 'all-the-icons-completion-marginalia-setup)\12\12" :post-blank 1 :post-affiliated 37935 :mode nil :granularity element :cached t :parent #190# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 38274 :end 39276 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun sudden-kill-line ()\12    (interactive)\12    (move-beginning-of-line nil)\12    (kill-line)\12    (kill-line)\12    (previous-line)\12    (end-of-line nil))\12\12  (defun org-fix-latex ()\12    (interactive)\12    (move-beginning-of-line nil)\12    (insert \"#+LATEX: \"))\12\12  (global-auto-revert-mode t)\12  (global-set-key (kbd \"C-k\") 'sudden-kill-line)\12  (global-set-key (kbd \"C-c m\") 'dabbrev-expand)\12  (global-set-key (kbd \"C-s\") 'consult-line)\12  (global-set-key (kbd \"C-x b\") 'consult-buffer)\12  (global-set-key (kbd \"C-x o\") 'ace-window)\12  (global-set-key (kbd \"C-c i\") 'ibuffer)\12  (global-set-key (kbd \"C-c a\") 'embark-act)\12\12  (setq-default embark-prompter 'embark-completing-read-prompter)\12\12  (defun 2e-eye-break ()\12    \"A recursive function that calls itself every 20 minutes to remind you to take a break.\"\12    (2e-emacs-remind \"Take a 20 second break to protect your eyes.\" \"Eye Doctor\")\12    (run-with-timer 1200 nil '2e-eye-break))\12\12  (setq inferior-lisp-program \"sbcl\")\12\12" :post-blank 1 :post-affiliated 38274 :mode planning :granularity element :cached t :parent #191=(section (:begin 38274 :end 39296 :contents-begin 38274 :contents-end 39294 :robust-begin 38274 :robust-end 39292 :post-blank 2 :post-affiliated 38274 :mode section :granularity element :cached t :parent #189# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (section (:begin 39329 :end 39431 :contents-begin 39329 :contents-end 39431 :robust-begin 39329 :robust-end 39429 :post-blank 0 :post-affiliated 39329 :mode section :granularity element :cached t :parent #75# :org-element--cache-sync-key nil)) 0] #75# 0] #191# 0] [[[nil nil #193=(section (:begin 39460 :end 39812 :contents-begin 39460 :contents-end 39811 :robust-begin 39460 :robust-end 39809 :post-blank 1 :post-affiliated 39460 :mode section :granularity element :cached t :parent #192# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 39535 :end 39767 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'emms)\12  (emms-minimalistic)\12\12  (define-emms-simple-player win-mpv '(file)\12                             (regexp-opt '(\".mp3\" \".mp4\" \".mkv\" \".webm\"))\12                             \"mpv\")\12\12" :post-blank 1 :post-affiliated 39535 :mode nil :granularity element :cached t :parent #193# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 39460 :end 39535 :contents-begin 39460 :contents-end 39535 :post-blank 0 :post-affiliated 39460 :mode planning :granularity element :cached t :parent #193# :org-element--cache-sync-key nil)) 0] [[nil nil #196=(section (:begin 39821 :end 40008 :contents-begin 39821 :contents-end 40006 :robust-begin 39821 :robust-end 40004 :post-blank 2 :post-affiliated 39821 :mode section :granularity element :cached t :parent #194# :org-element--cache-sync-key nil)) 0] [nil nil #195# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 39821 :end 39974 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (emms-minimalistic)\12  (setq emms-player-list '(emms-player-win-mpv)\12        emms-info-functions '(emms-info-native))\12" :post-blank 1 :post-affiliated 39821 :mode planning :granularity element :cached t :parent #196# :org-element--cache-sync-key nil)) 0] #194# 0] #192# 0] #190# 0] (paragraph (:begin 35520 :end 35566 :contents-begin 35520 :contents-end 35566 :post-blank 0 :post-affiliated 35520 :mode planning :granularity element :cached t :parent #179# :org-element--cache-sync-key nil)) 0] [[[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 40029 :end 41232 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (defun electric-pair-disable-certain-brackets ()                                                           ; Disables some \"unwieldy\" brackets so ligatures don't get messed up\12    (setq-local electric-pair-inhibit-predicate                                                              ; Sets a predicate for inhibiting the adding of a bracket\12                '(lambda (c)\12                   (or (char-equal c ?<) (char-equal c ?=)))))                                                ; If the character is equal to < or =, inhibit it\12\12    (2e/add-function-to-multiple-hooks 'electric-pair-disable-certain-brackets '(                               ; Adds function to multiple hooks\12                                                                              prog-mode-hook                 ;    Adds to all programming modes\12                                                                              org-mode-hook                  ;    Adds to Org Mode\12                                                                              text-mode-hook                 ;    Adds to Text Mode\12                                                                              ))\12" :post-blank 1 :post-affiliated 40029 :mode planning :granularity element :cached t :parent #217=(section (:begin 40029 :end 41297 :contents-begin 40029 :contents-end 41295 :robust-begin 40029 :robust-end 41293 :post-blank 2 :post-affiliated 40029 :mode section :granularity element :cached t :parent #195# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #197# 0] #81# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 41326 :end 41425 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'avy)\12  (setq avy-keys (string-to-list \"wasdiop[\"))\12\12" :post-blank 1 :post-affiliated 41326 :mode planning :granularity element :cached t :parent #199=(section (:begin 41326 :end 41486 :contents-begin 41326 :contents-end 41484 :robust-begin 41326 :robust-end 41482 :post-blank 2 :post-affiliated 41326 :mode section :granularity element :cached t :parent #197# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #204=(section (:begin 41494 :end 42256 :contents-begin 41494 :contents-end 42253 :robust-begin 41494 :robust-end 42251 :post-blank 3 :post-affiliated 41494 :mode section :granularity element :cached t :parent #198# :org-element--cache-sync-key nil)) 0] #198# 0] #199# 0] [[[nil nil #200# 0] [nil nil (paragraph (:begin 42268 :end 42389 :contents-begin 42268 :contents-end 42389 :post-blank 0 :post-affiliated 42268 :mode planning :granularity element :cached t :parent #201=(section (:begin 42268 :end 42598 :contents-begin 42268 :contents-end 42595 :robust-begin 42268 :robust-end 42593 :post-blank 3 :post-affiliated 42268 :mode section :granularity element :cached t :parent #200# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #201# 0] [[nil nil #202# 0] [nil nil (paragraph (:begin 42612 :end 42751 :contents-begin 42612 :contents-end 42751 :post-blank 0 :post-affiliated 42612 :mode planning :granularity element :cached t :parent #203=(section (:begin 42612 :end 42870 :contents-begin 42612 :contents-end 42867 :robust-begin 42612 :robust-end 42865 :post-blank 3 :post-affiliated 42612 :mode section :granularity element :cached t :parent #202# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #203# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 42389 :end 42580 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'orderless)\12  (setq completion-styles '(orderless basic))\12  (setq completion-category-defaults nil)\12  (setq orderless-component-separator \";\")\12\12\12" :post-blank 1 :post-affiliated 42389 :mode nil :granularity element :cached t :parent #201# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 41494 :end 42219 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defhydra hydra-windows ()\12    \"window splitting and hopping\"\12    (\"w\" windmove-delete-up)\12    (\"s\" windmove-delete-down)\12    (\"a\" windmove-delete-left)\12    (\"d\" windmove-delete-right)\12    (\"u\" ace-window)\12    (\"i\" delete-other-windows)\12    (\"o\" delete-window)\12    (\"q\" split-window-below)\12    (\"e\" split-window-right)\12    (\"z\" split-root-window-below)\12    (\"c\" split-root-window-right)\12    (\"h\" shrink-window-horizontally)\12    (\"l\" enlarge-window-horizontally)\12    (\"j\" shrink-window)\12    (\"k\" enlarge-window))\12\12  (defhydra hydra-clipboard ()\12    \"the emacs infinite clipboard\"\12    (\"i\" kill-region)\12    (\"o\" kill-ring-save)\12    (\"p\" nil)\12    (\"d\" yank)\12    (\"w\" yank-from-kill-ring))\12\12\12" :post-blank 1 :post-affiliated 41494 :mode planning :granularity element :cached t :parent #204# :org-element--cache-sync-key nil)) 0] [[[[[nil nil #87# 0] [nil nil #205# 0] (section (:begin 42914 :end 43139 :contents-begin 42914 :contents-end 43139 :robust-begin 42914 :robust-end 43137 :post-blank 0 :post-affiliated 42914 :mode section :granularity element :cached t :parent #87# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 43152 :end 44082 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'org-timer)\12\12  ;;; Variable Definitions\12\12  (defvar progodoro-countdown nil\12    \"Stores the current mode of the progodoro. NIL means that the timer has been reset and that the baseline focus time hasn't been recorded yet. 1 means that either the baseline focus time is being recorded now, or has already been recorded. t means that the baseline focus time has already been raised.\")\12\12  (defvar progodoro-focus \"00:00:00 \"\12    \"The amount of time the progodoro has gone up to as of now. It is stored as a string of format `HH:MM:SS `.\")\12\12  (defvar progodoro-recharging-p nil\12    \"Whether the progodoro is recharging\")\12\12  (defvar progodoro-pity 0\12    \"Every non-long break that a person gets will increase the pity by an integer between 0 and 5. Before every break, it will roll and if the integer between 0 and (100 - pity) is 0, then it will be a long break and pity will be reset.\")\12\12" :post-blank 1 :post-affiliated 43152 :mode planning :granularity element :cached t :parent #207=(section (:begin 43152 :end 44111 :contents-begin 43152 :contents-end 44110 :robust-begin 43152 :robust-end 44108 :post-blank 1 :post-affiliated 43152 :mode section :granularity element :cached t :parent #205# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #211=(section (:begin 44123 :end 47429 :contents-begin 44123 :contents-end 47427 :robust-begin 44123 :robust-end 47425 :post-blank 2 :post-affiliated 44123 :mode section :granularity element :cached t :parent #206# :org-element--cache-sync-key nil)) 0] #206# 0] #207# 0] [[[nil nil #208# 0] [nil nil (paragraph (:begin 47441 :end 47497 :contents-begin 47441 :contents-end 47497 :post-blank 0 :post-affiliated 47441 :mode planning :granularity element :cached t :parent #209=(section (:begin 47441 :end 47596 :contents-begin 47441 :contents-end 47593 :robust-begin 47441 :robust-end 47591 :post-blank 3 :post-affiliated 47441 :mode section :granularity element :cached t :parent #208# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #209# 0] [[nil nil #95# 0] [nil nil #210# 0] (section (:begin 47607 :end 47638 :contents-begin 47607 :contents-end 47638 :robust-begin 47607 :robust-end 47636 :post-blank 0 :post-affiliated 47607 :mode section :granularity element :cached t :parent #95# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 47497 :end 47578 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'yasnippet)\12  (yas-global-mode 1)\12\12" :post-blank 1 :post-affiliated 47497 :mode nil :granularity element :cached t :parent #209# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 44123 :end 47386 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;;; Hooks\12  (add-hook 'org-timer-done-hook (lambda () (if progodoro-recharging-p\12                                                (progn (2e-emacs-remind \"Your timer has recharged. You can proceed to discharge the timer again.\" \"Progodoro\")\12                                                       (setq progodoro-recharging-p nil))\12                                              (2e-emacs-remind \"Your timer has overloaded. Please recharge your timer.\" \"Progodoro\"))))\12\12  ;;; Functions\12  (defun 2e/recharge-progodoro ()\12    (interactive)\12    (let* ((capped-p (>= progodoro-pity 95))\12           (roll (random (- 100 (if capped-p 95 progodoro-pity))))\12                 (effort (floor (/ (funcall\12                                    (lambda (self numbers add) (funcall self numbers add self))\12                                    (lambda (numbers add self) (if (null numbers) 0 (+ (* add (car numbers)) (funcall self (cdr numbers) (/ add 60) self))))\12                                    (mapcar #'string-to-number (split-string progodoro-focus \":\"))\12                                    3600) 50)))\12                 (pity-increase (random effort)))\12           (if (or (= roll 0) (> progodoro-pity 150))\12               (progn (setq progodoro-recharging-p t)\12                      (org-timer-set-timer (+ 30 (random (if capped-p (+ 70 (- progodoro-pity 95)) 70))))\12                      (setq progodoro-pity 0)\12                      (message \"You are given a long break!\"))\12             (progn (message (format \"Due to your effort of %s, you are given an increase in pity of %s.\\nYou rolled a %s.\" effort pity-increase roll))\12                    (setq progodoro-recharging-p t)\12                    (setq progodoro-pity (+ pity-increase progodoro-pity))\12                    (org-timer-set-timer 5)))))\12\12  (defun 2e/discharge-progodoro ()\12    (interactive)\12    (cond ((not progodoro-countdown) (progn (org-timer-start)\12                                            (setq progodoro-countdown 1)\12                                            (message \"Starting Forge.\")))\12          ((eq progodoro-countdown 1) (progn (setq progodoro-focus (org-timer-value-string))\12                                             (org-timer-stop)\12                                             (message \"Progodoro Timer Forged.\")\12                                             (setq progodoro-countdown t)))\12          (t (progn (let ((time-list (split-string progodoro-focus (rx \":\"))))\12\12                      (setq progodoro-focus (format \"%s:%s:%s \"\12                                                    (string-to-number (car time-list))\12                                                    (+ 5 (string-to-number (cadr time-list)))\12                                                    (string-to-number (caddr time-list)))))\12                    (org-timer-set-timer progodoro-focus)))))\12\12  (defun 2e/drain-progodoro ()\12    (interactive)\12    (org-timer-stop)\12    (setq progodoro-recharging-p nil)\12    (setq progodoro-countdown nil)\12    (setq progodoro-focus \"00:00:00 \"))\12\12\12    ;;; Keybindings\12  (global-set-key (kbd \"<home>\") '2e/discharge-progodoro)\12  (global-set-key (kbd \"<end>\") '2e/recharge-progodoro)\12  (global-set-key (kbd \"<f12>\") 'org-timer-pause-or-continue)\12" :post-blank 1 :post-affiliated 44123 :mode planning :granularity element :cached t :parent #211# :org-element--cache-sync-key nil)) 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 47647 :end 47784 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'flycheck)\12  (global-flycheck-mode)\12  (add-hook 'after-init-hook #'global-flycheck-mode)\12\12\12" :post-blank 1 :post-affiliated 47647 :mode planning :granularity element :cached t :parent #216=(section (:begin 47647 :end 47994 :contents-begin 47647 :contents-end 47991 :robust-begin 47647 :robust-end 47989 :post-blank 3 :post-affiliated 47647 :mode section :granularity element :cached t :parent #210# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #212# 0] #93# 0] [[nil nil (paragraph (:begin 48014 :end 48133 :contents-begin 48014 :contents-end 48133 :post-blank 0 :post-affiliated 48014 :mode planning :granularity element :cached t :parent #215=(section (:begin 48014 :end 48182 :contents-begin 48014 :contents-end 48179 :robust-begin 48014 :robust-end 48177 :post-blank 3 :post-affiliated 48014 :mode section :granularity element :cached t :parent #212# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [[nil nil #213# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters ":results silent" :begin 48193 :end 48523 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (require 'org-roam)\12  (setq org-roam-directory \"C:/Users/linyi/OneDrive/Documents/Wiki\")\12  (org-roam-setup)\12  (global-set-key (kbd \"C-c n l\") 'org-roam-buffer-toggle)\12  (global-set-key (kbd \"C-c n f\") 'org-roam-node-find)\12  (global-set-key (kbd \"C-c n i\") 'org-roam-node-insert)\12" :post-blank 0 :post-affiliated 48193 :mode planning :granularity element :cached t :parent #214=(section (:begin 48193 :end 48523 :contents-begin 48193 :contents-end 48523 :robust-begin 48193 :robust-end 48521 :post-blank 0 :post-affiliated 48193 :mode section :granularity element :cached t :parent #213# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #214# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 48133 :end 48168 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12" :post-blank 1 :post-affiliated 48133 :mode nil :granularity element :cached t :parent #215# :org-element--cache-sync-key nil)) 1] #215# 1] #216# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 42751 :end 42848 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'alert-toast)\12  (setq alert-default-style 'toast)\12\12" :post-blank 1 :post-affiliated 42751 :mode nil :granularity element :cached t :parent #203# :org-element--cache-sync-key nil)) 1] #217# 0] #218# 0] nil nil 0] org-element--cache-compare)))