(((elisp org-element--headline-cache) . #s(avl-tree- [[[[nil nil #8=(headline (:raw-value #1="Problem 1 (pg. 317)" :begin 210 :end 867 :pre-blank 0 :contents-begin 232 :contents-end 866 :robust-begin 234 :robust-end 864 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 210 :title #1# :mode nil :granularity element :cached t :parent #3=(org-data (:begin 1 :contents-begin 1 :contents-end 4563 :end 4564 :robust-begin 3 :robust-end 4561 :post-blank 1 :post-affiliated 1 :path "c:/Users/linyi/OneDrive/Documents/School/Notes/AlgebraII/11.9/HW-11.9.org" :mode org-data :CATEGORY "HW-11.9" :parent nil :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #9=(headline (:raw-value #2="Problem 3 (pg. 317)" :begin 1187 :end 1493 :pre-blank 0 :contents-begin 1209 :contents-end 1492 :robust-begin 1211 :robust-end 1490 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1187 :title #2# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #12=(headline (:raw-value #4="Problem 2 (pg. 317)" :begin 867 :end 1187 :pre-blank 0 :contents-begin 889 :contents-end 1186 :robust-begin 891 :robust-end 1184 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 867 :title #4# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil [nil nil #13=(headline #5=(:raw-value "Problem 8 (pg. 317)" :begin 3431 :end 4564 :pre-blank 0 :contents-begin 3453 :contents-end 4563 :robust-begin 3455 :robust-end 4561 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3431 :title (#("Problem 8 (pg. 317)" 0 19 (:parent (headline #5#)))) :parent #3# :cached t :org-element--cache-sync-key nil)) 0] #10=(headline (:raw-value #6="Problem 5 (pg. 317)" :begin 2428 :end 2736 :pre-blank 0 :contents-begin 2450 :contents-end 2735 :robust-begin 2452 :robust-end 2733 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2428 :title #6# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 1] #11=(headline (:raw-value #7="Problem 4 (pg. 317)" :begin 1493 :end 2428 :pre-blank 0 :contents-begin 1515 :contents-end 2427 :robust-begin 1517 :robust-end 2425 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1493 :title #7# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[nil nil #3# 0] [nil nil #8# 0] (section (:begin 1 :end 210 :contents-begin 1 :contents-end 209 :robust-begin 1 :robust-end 207 :post-blank 1 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[nil nil #9# 0] [nil nil #10# 0] #11# 0] #12# 0] [[nil nil #14=(section (:begin 3453 :end 4564 :contents-begin 3453 :contents-end 4563 :robust-begin 3453 :robust-end 4561 :post-blank 1 :post-affiliated 3453 :mode section :granularity element :cached t :parent #13# :org-element--cache-sync-key nil)) 0] [nil nil (paragraph (:begin 3600 :end 3676 :contents-begin 3600 :contents-end 3676 :post-blank 0 :post-affiliated 3600 :mode nil :granularity element :cached t :parent #14# :org-element--cache-sync-key nil)) 0] (latex-environment (:begin 3453 :end 3600 :value "\\begin{problem}\12Find x, y, and z such that \\\\\12\\begin{align*}\0124x - y + 4z &= 1 \\\\\0122x - y + 8z &= 11 \\\\\0122x - 2y + 4z &= 0\12\\end{align*}\12\\end{problem}\12" :post-blank 0 :post-affiliated 3453 :mode planning :granularity element :cached t :parent #14# :org-element--cache-sync-key nil)) 0] #13# -1] nil nil 0] org-element--cache-compare)))